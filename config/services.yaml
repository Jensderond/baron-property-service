# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    'Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter': ~

    App\Contract\AddressClientInterface: '@App\Client\OpenStreetMapClient'
    App\Contract\PropertyClientInterface: '@App\Client\RealworksClient'

    App\Serializer\PropertyNormalizer:
        arguments:
            - '@App\Service\AddressService'

    App\State\OfferProvider:
        bind:
            $collectionProvider: '@api_platform.doctrine.orm.state.collection_provider'

    Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor: ~
    Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor: ~

    Symfony\Component\PropertyInfo\PropertyInfoExtractor:
        arguments:
            $listExtractors: [ ]
            $typeExtractors: [ '@Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor', '@Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor' ]

    Symfony\Component\Serializer\Mapping\Loader\AttributeLoader: ~

    Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory:
        arguments:
            $loader: '@Symfony\Component\Serializer\Mapping\Loader\AttributeLoader'

    app.object_normalizer:
        class: Symfony\Component\Serializer\Normalizer\ObjectNormalizer
        arguments:
            $classMetadataFactory: '@Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory'
            $nameConverter: '@Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter'
            $propertyTypeExtractor: '@Symfony\Component\PropertyInfo\PropertyInfoExtractor'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
